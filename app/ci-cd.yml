name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests to the main branch

jobs:
  # Job 1: Run tests
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: laravel
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
        options: --health-cmd="pg_isready -U postgres" --health-timeout=30s --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'  # Or your preferred PHP version

      - name: Install Composer dependencies
        run: |
          curl -sS https://getcomposer.org/installer | php
          php composer.phar install

      - name: Set up environment variables
        run: |
          cp .env.example .env
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=postgres/' .env
          sed -i 's/DB_PASSWORD=root/DB_PASSWORD=root/' .env
          sed -i 's/DB_PORT=3306/DB_PORT=5432/' .env

      - name: Run migrations
        run: |
          php artisan migrate --force

      - name: Run tests
        run: |
          vendor/bin/phpunit --coverage-text

  # Job 2: Deploy the application to DigitalOcean
  deploy:
    runs-on: ubuntu-latest
    needs: test  # Ensure deploy only runs if tests are successful
    if: success()  # Only run the deploy job if the test job is successful

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH for deployment
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa $DO_HOST >> ~/.ssh/known_hosts

      - name: Deploy to DigitalOcean
        run: |
          ssh -i ~/.ssh/id_rsa root@$DO_HOST << 'EOF'
            cd /var/www/your-app
            git pull origin main
            composer install --no-dev --optimize-autoloader
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            sudo systemctl restart nginx
          EOF

    env:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      DO_HOST: ${{ secrets.DO_HOST }}
